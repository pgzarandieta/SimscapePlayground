function [intersection1, intersection2] = intersect3Spheres(X1,X2,X3,r1,r2,r3)

x1=X1(1); y1=X1(2); z1=X1(3);
x2=X2(1); y2=X2(2); z2=X2(3);
x3=X3(1); y3=X3(2); z3=X3(3);
% convert in coord sys at [x1 y1 z1] oriented same as global
x2=x2-x1; y2=y2-y1; z2=z2-z1;
x3=x3-x1; y3=y3-y1; z3=z3-z1;
a=(16*y2^2*z3*y3^2*z2*x3*r1^2*x2-4*y2^3*z3*y3*z2*x3*r1^2*x2+4*y2^3*z3*y3*z2*x3*x2*r3^2-4*y2*y3^3*z2*x2*z3*r1^2*x3+4*y2*y3^3*z2*x2*z3*r2^2*x3+16*z2*x3^2*x2^2*r1^2*y3*y2*z3-4*z2*x3^3*x2*r1^2*y3*y2*z3+4*z2*x3^3*x2*y2*z3*r2^2*y3-4*x2^3*z3*x3*y2*r1^2*z2*y3+4*x2^3*z3*x3*y2*r3^2*z2*y3-4*y2*z3*z2^3*y3*x3*r1^2*x2+4*y2*z3*z2^3*y3*x3*x2*r3^2+8*y2*z3^2*z2^2*y3*x2*r1^2*x3-4*y2*z3^2*z2^2*y3*x2*r2^2*x3+4*x2^2*y3^2*z2*y2^2*z3*x3^2-4*x2^4*z3^2*x3^2*y3*y2-2*z2^2*x3^4*x2^2*y2^2+2*z2^2*x3^3*y2^2*r1^2*x2-2*z2^2*x3^3*y2^2*x2*r3^2+2*z2^2*x3^5*x2*y2*y3+2*x2^5*z3^2*x3*y3*y2+2*z2^3*y3^2*y2^2*z3*x3^2+2*z2^3*y3^2*x2^2*z3*x3^2+2*z2^3*y3^2*x2^2*z3*r1^2-2*z2^3*y3^2*x2^2*z3*r3^2+2*x2^2*y3^4*z2*y2^2*z3-4*x2^2*y3^2*z2^2*x3^2*y2^2+2*x2^4*y3^2*z2*z3*x3^2-2*x2^2*y3^3*z2^2*y2*x3^2+2*x2^2*y3^3*z2^2*y2*z3^2+2*x2^3*y3^2*z2^2*x3*z3^2+2*x2^2*y3^2*z2*y2^2*z3^3+2*x2^2*y3^3*z2^2*y2*r1^2+2*x2^2*y3^2*z2^2*x3^2*r2^2+2*x2^4*y3^2*z2*z3*r1^2-2*x2^4*y3^2*z2*z3*r3^2-2*x2^2*y3^3*z2^2*y2*r3^2+2*x2^3*y3^2*z2^2*x3*r1^2-2*x2^3*y3^2*z2^2*x3*r3^2+2*y2^4*z3*x3^2*y3^2*z2+2*y2^2*z3*x3^4*z2*x2^2-4*y2^2*z3^2*x3^2*x2^2*y3^2+2*y2^3*z3^2*x3^2*z2^2*y3+2*y2^2*z3^2*x3^3*x2*z2^2-2*y2^3*z3^2*x3^2*x2^2*y3+2*y2^3*z3^2*x3^2*r1^2*y3+2*y2^2*z3*x3^4*z2*r1^2-2*y2^2*z3*x3^4*z2*r2^2+2*y2^2*z3^2*x3^2*x2^2*r3^2-2*y2^3*z3^2*x3^2*r2^2*y3+2*y2^2*z3^2*x3^3*x2*r1^2-2*y2^2*z3^2*x3^3*x2*r2^2-2*y2^2*z3^2*y3^2*x2^3*x3-4*y2^4*z3^2*y3^2*x2*x3+2*y2^2*z3^2*y3^2*x2^2*r3^2+4*y2^3*z3^2*y3*x2^3*x3+2*y2^5*z3^2*y3*x2*x3+4*y2*y3^3*z2^2*x3^3*x2+2*y2*y3^5*z2^2*x3*x2-2*y2^2*y3^2*z2^2*x3^3*x2-4*y2^2*y3^4*z2^2*x3*x2+2*y2^2*y3^2*z2^2*x3^2*r2^2-4*z2^2*x3^4*x2^2*y2*y3+2*z2*x3^2*x2^2*y2^2*z3^3+2*z2*x3^2*y2^4*z3*r1^2+2*z2^2*x3^2*y2^3*r1^2*y3-2*z2*x3^2*y2^4*z3*r3^2-2*z2^2*x3^2*y2^3*r3^2*y3-z2^4*y3^2*x3^2*x2^2-z2^4*y3^2*x3^2*y2^2+2*z2^3*y3^4*x2^2*z3+2*z2^3*y3^2*x2^2*z3^3+2*x2^2*y3^5*z2^2*y2-2*x2^2*y3^4*z2^2*y2^2-2*x2^4*y3^2*z2^2*x3^2+2*x2^3*y3^2*z2^2*x3^3+2*x2^4*y3^4*z2*z3+2*x2^3*y3^4*z2^2*x3+2*x2^2*y3^4*z2^2*r2^2-2*y2^4*z3^2*x3^2*y3^2+2*y2^5*z3^2*x3^2*y3+2*y2^4*z3*x3^4*z2+2*y2^2*z3^2*x3^3*x2^3-2*y2^2*z3^2*x3^4*x2^2+2*y2^4*z3^2*x3^3*x2+2*y2^2*z3*x3^4*z2^3-y2^2*z3^4*x3^2*x2^2+2*y2^4*z3^2*x3^2*r3^2-2*y2^2*z3^2*y3^4*x2^2+2*y2^3*z3^2*y3^3*x2^2-y2^2*z3^4*y3^2*x2^2-y2^4*z3^2*y3^2*x2^2+2*y2^3*y3^3*z2^2*x3^2-y2^2*y3^4*z2^2*x3^2-2*y2^4*y3^2*z2^2*x3^2-z2^4*y3^4*x2^2-2*x2^4*y3^4*z2^2-2*y2^4*z3^2*x3^4-y2^4*z3^4*x3^2-2*z2^2*x3^4*y2^4-z2^4*x3^4*y2^2-2*x2^4*z3^2*y3^4-x2^4*z3^4*y3^2-z3^2*y2^6*x3^2-x3^6*z2^2*y2^2-z3^2*x2^6*y3^2-2*y2^4*x3^4*y3^2+2*y2^4*x3^4*r3^2+2*y2^5*x3^4*y3-y2^4*x3^2*r1^4-y2^4*x3^2*y3^4+2*y2^5*x3^2*y3^3-y2^4*x3^2*r3^4-y2^6*x3^2*y3^2-y2^2*x3^4*r1^4-y2^2*x3^4*x2^4+2*y2^2*x3^5*x2^3-y2^2*x3^4*r2^4-y2^2*x3^6*x2^2-2*y2^4*x3^4*x2^2+2*y2^4*x3^4*r2^2+2*y2^4*x3^5*x2+2*x2^4*y3^5*y2-2*x2^4*y3^4*y2^2+2*x2^4*y3^4*r2^2-x2^2*y3^4*r1^4-x2^2*y3^6*y2^2+2*x2^2*y3^5*y2^3-x2^2*y3^4*y2^4-x2^2*y3^4*r2^4-x2^4*y3^2*r1^4-x2^6*y3^2*x3^2+2*x2^5*y3^2*x3^3-x2^4*y3^2*x3^4-x2^4*y3^2*r3^4+2*x2^5*y3^4*x3-2*x2^4*y3^4*x3^2+2*x2^4*y3^4*r3^2-y3^6*z2^2*x2^2-y2^4*x3^6-y2^6*x3^4-x2^6*y3^4-x2^4*y3^6-2*z2*x3^2*r1^2*y2^2*z3*r3^2-2*z2*y3^2*r2^2*x2^2*z3*r1^2+2*z2*y3^2*r2^2*x2^2*z3*r3^2+2*x2^4*y3^2*z2*z3^3+2*y2*r1^4*z2^2*y3*x3*x2+2*x2^2*y3^2*z2*y2^2*z3*r1^2-8*x2^2*y3^3*z2*r1^2*y2*z3-2*x2^2*y3^2*z2*y2^2*z3*r3^2-8*x2^3*y3^2*z2*z3*r1^2*x3+2*y2^2*z3*x3^2*r1^2*y3^2*z2-8*y2^3*z3*x3^2*r1^2*z2*y3-2*y2^2*z3*x3^2*z2*y3^2*r2^2-8*y2^2*z3*x3^3*z2*r1^2*x2-4*y2^2*z3^2*y3^2*x2*z2^2*x3-4*y2^2*z3^2*y3^2*x2*r1^2*x3+4*y2^2*z3^2*y3^2*x2*r2^2*x3-4*y2^3*z3*y3*z2*x3^3*x2-4*y2^3*z3*y3^3*z2*x3*x2-4*y2^3*z3^3*y3*z2*x3*x2+4*y2^3*z3^2*y3*x2*z2^2*x3-4*y2^3*z3^2*y3*x2*r2^2*x3-4*y2*y3^3*z2*x2^3*z3*x3+4*y2*y3^3*z2^2*x3*x2*z3^2-4*y2*y3^3*z2^3*x2*z3*x3-4*y2*y3^3*z2^2*x3*x2*r3^2-4*y2^2*y3^2*z2^2*x3*r1^2*x2+4*y2^2*y3^2*z2^2*x3*x2*r3^2-4*z2^2*x3^2*x2^2*y2*z3^2*y3+2*z2*x3^2*x2^2*y2^2*z3*r1^2-4*z2^2*x3^2*x2^2*y2*r1^2*y3-2*z2*x3^2*x2^2*y2^2*z3*r3^2+4*z2^2*x3^2*x2^2*y2*r3^2*y3-4*z2^3*x3^3*x2*y2*z3*y3+4*z2^2*x3^3*x2*y2*z3^2*y3-4*z2*x3^3*x2^3*y3*y2*z3-4*z2^2*x3^3*x2*y2*r3^2*y3+4*x2^3*z3^2*x3*y2*z2^2*y3-4*x2^3*z3^3*x3*y2*z2*y3-4*x2^3*z3^2*x3*y2*r2^2*y3+2*x2^2*z3*x3^2*r1^2*y3^2*z2-4*x2^2*z3^2*x3^2*r1^2*y3*y2-2*x2^2*z3*x3^2*z2*y3^2*r2^2+4*x2^2*z3^2*x3^2*y2*r2^2*y3-4*y2*z3^3*z2^3*y3*x3*x2+2*y2*z3^2*z2^4*y3*x2*x3+2*y2*z3^4*z2^2*y3*x3*x2-2*r1^2*y3^2*z2*x2^2*z3*r3^2-2*y2^2*z3*r1^2*z2*x3^2*r2^2+2*r1^4*y3*y2*z3^2*x2*x3+2*z2^2*x3^5*y2^2*x2+2*z2^2*x3^4*y2^3*y3+2*z2*x3^2*y2^4*z3^3+2*z2^2*x3^4*y2^2*r2^2-z2^2*x3^4*x2^2*y3^2+2*x2^5*z3^2*x3*y3^2-x2^4*z3^2*x3^2*y2^2-2*x2^4*z3^2*x3^2*y3^2+2*x2^4*z3^2*y3^3*y2+2*x2^4*z3^2*y3^2*r3^2-2*y2^2*x3^4*z2^2*y3^2-2*z2^2*x3^2*x2^2*y3^4-2*x2^2*z3^2*y2^4*x3^2-2*x2^4*y3^2*y2^2*z3^2+2*y2^2*z3^3*z2^3*x3^2-z3^2*y2^2*r1^4*x3^2-z3^2*y2^2*z2^4*x3^2-z3^2*y2^2*r2^4*x3^2-2*z3^2*y2^4*x3^2*z2^2+2*z3^2*y2^4*x3^2*r2^2-2*x3^4*z2^2*y2^2*z3^2+2*x3^4*z2^2*y2^2*r3^2-x3^2*z2^2*y2^2*r1^4-x3^2*z2^2*y2^2*z3^4-x3^2*z2^2*y2^2*r3^4-2*z3^2*x2^4*y3^2*z2^2+2*z3^2*x2^4*y3^2*r2^2-z3^2*x2^2*r1^4*y3^2-z3^2*x2^2*z2^4*y3^2-z3^2*x2^2*r2^4*y3^2+2*y2^3*x3^4*r1^2*y3-2*y2^3*x3^4*x2^2*y3-2*y2^3*x3^4*r2^2*y3+2*y2^4*x3^3*r1^2*x2-2*y2^4*x3^3*x2*y3^2-2*z2^2*x3^2*x2^2*y3^2*z3^2+2*z2^2*x3^2*x2^2*y3^2*r3^2-2*x2^2*z3^2*y2^2*x3^2*z2^2+2*x2^2*z3^2*y2^2*x3^2*r2^2+2*x2^2*y3^2*y2^2*z3^2*r2^2+2*y2^2*z3^3*z2*x3^2*r1^2-2*y2^2*z3^3*z2*x3^2*r2^2+2*z2^3*x3^2*y2^2*z3*r1^2-2*z2^3*x3^2*y2^2*z3*r3^2+2*x2^2*z3^3*r1^2*y3^2*z2-2*x2^2*z3^3*z2*y3^2*r2^2+2*r1^4*y3^2*z2*x2^2*z3+2*y2^2*z3*r1^4*z2*x3^2+2*x2^2*z3*y3^4*r1^2*z2+2*x2^2*z3^2*y3^3*r1^2*y2-2*x2^2*z3*y3^4*z2*r2^2-2*x2^2*z3^2*y3^3*y2*r2^2+2*x2^3*z3^2*y3^2*r1^2*x3-2*x2^3*z3^2*y3^2*r2^2*x3-2*y2^2*z3^2*z2^2*y3^2*x2^2-2*y2^2*x3^2*z2^2*y3^2*z3^2+2*y2^2*x3^2*z2^2*y3^2*r3^2-4*y2*z3^2*z2^2*y3*x3*x2*r3^2-4*y2*z3^3*z2*y3*x2*r1^2*x3+4*y2*z3^3*z2*y3*x2*r2^2*x3-4*r1^4*y3*y2*z3*z2*x3*x2-4*r1^2*y3*y2*z3^2*x2*r2^2*x3-4*y2*r1^2*z2^2*y3*x3*x2*r3^2+4*r1^2*y3*y2*z3*z2*x3*x2*r3^2+4*y2*r1^2*z2*y3*x2*z3*r2^2*x3+2*z2*x3^2*r2^2*y2^2*z3*r3^2+2*y2*z3^2*r2^4*y3*x2*x3+2*y2*r3^4*z2^2*y3*x3*x2+4*y2^2*x3*x2*y3^2*r1^2*r3^2+4*y2^2*x3*x2*y3^2*r1^2*r2^2-4*y2^2*x3*x2*y3^2*r3^2*r2^2+4*y2*x3^2*x2^2*y3*r1^2*r2^2+4*y2*x3^2*x2^2*y3*r1^2*r3^2-4*y2*x3^2*x2^2*y3*r2^2*r3^2-4*y2^3*x3*x2*y3*z3^2*r3^2-4*y2*x3*x2*y3^3*r1^2*r2^2-4*y2^3*x3*x2*y3*r1^2*r3^2-4*y2*x3*x2*y3^3*z2^2*r2^2-4*y2*x3*x2^3*y3*r1^2*r3^2-4*y2*x3^3*x2*y3*r1^2*r2^2-4*y2*x3^3*x2*y3*z2^2*r2^2-4*y2*x3*x2^3*y3*z3^2*r3^2-4*z3^2*y2^2*r1^2*x3^2*z2^2+2*z3^2*y2^2*r1^2*x3^2*r2^2+2*z3^2*y2^2*z2^2*x3^2*r2^2+2*x3^2*z2^2*y2^2*z3^2*r3^2+2*x3^2*z2^2*y2^2*r1^2*r3^2-4*z3^2*x2^2*r1^2*y3^2*z2^2+2*z3^2*x2^2*r1^2*y3^2*r2^2+2*z3^2*x2^2*z2^2*y3^2*r2^2-2*y2^3*x3^2*r1^2*y3*r3^2-2*y2^3*x3^2*x2^2*y3*r1^2+2*y2^3*x3^2*x2^2*y3*r3^2-2*y2^3*x3^2*r1^2*r2^2*y3+2*y2^3*x3^2*r3^2*r2^2*y3-2*y2^2*x3^3*r1^2*x2*r2^2-2*y2^2*x3^3*r1^2*x2*y3^2-2*y2^2*x3^3*r1^2*x2*r3^2+2*y2^2*x3^3*r2^2*x2*y3^2+2*y2^2*x3^3*r2^2*x2*r3^2+2*y2^2*x3^2*r1^2*y3^2*r2^2+4*y2^2*x3^2*x2^2*y3^2*r2^2+2*y2^2*x3^2*r1^2*x2^2*r3^2+4*y2^2*x3^2*x2^2*y3^2*r3^2-8*y2^3*x3^3*r1^2*x2*y3-2*x2^2*y3^3*r1^2*y2*x3^2-2*x2^2*y3^3*r1^2*y2*r3^2-2*x2^2*y3^3*y2*r1^2*r2^2+2*x2^2*y3^3*y2*x3^2*r2^2+2*x2^2*y3^3*y2*r3^2*r2^2-2*x2^3*y3^2*r1^2*y2^2*x3-2*x2^3*y3^2*r1^2*r2^2*x3-2*x2^3*y3^2*r1^2*x3*r3^2+2*x2^3*y3^2*y2^2*x3*r3^2+2*x2^3*y3^2*r2^2*x3*r3^2+2*x2^2*y3^2*y2^2*r1^2*r3^2-4*y2*z3*r2^2*y3*z2*x3*x2*r3^2-4*x2^4*y3^2*r1^2*x3^2+2*x2^4*y3^2*r1^2*r3^2+2*x2^3*y3^2*r1^2*x3^3+2*x2^4*y3^2*x3^2*r2^2-2*x2^5*y3^2*x3*r3^2-2*x2^3*y3^2*r2^2*x3^3+2*x2^4*y3^2*x3^2*r3^2-y3^2*z2^2*r1^4*x2^2-y3^2*z2^2*x2^2*z3^4-y3^2*z2^2*x2^2*r3^4-2*y3^4*z2^2*x2^2*z3^2+2*y3^4*z2^2*x2^2*r3^2+4*y2^3*x3*x2^3*y3^3+4*y2^3*x3^3*x2*y3^3+2*y2*x3*x2^5*y3^3+2*y2^3*x3^5*x2*y3+2*y2^3*x3*x2*y3^5-4*y2^4*x3*x2*y3^4+2*y2^5*x3*x2*y3^3+2*y2*x3^3*x2^5*y3-4*y2*x3^4*x2^4*y3+2*y2^5*x3^3*x2*y3+2*y2*x3^5*x2^3*y3+2*y2*x3*x2^3*y3^5+4*y2^3*x3^3*x2^3*y3+4*y2*x3^3*x2^3*y3^3-2*y2^4*x3^3*x2*r3^2-2*y2^5*x3^2*r3^2*y3+2*y2^4*x3^2*y3^2*r2^2+2*y2^3*x3^2*r1^2*y3^3+2*y2^3*x3^2*r1^4*y3-4*y2^4*x3^2*r1^2*y3^2-3*y2^4*x3^2*x2^2*y3^2+2*y2^4*x3^2*r1^2*r3^2+2*y2^5*x3^2*r1^2*y3+2*y2^4*x3^2*y3^2*r3^2-2*y2^3*x3^2*y3^3*r2^2-y2^2*x3^2*r1^4*y3^2-3*y2^2*x3^2*x2^4*y3^2-y2^2*x3^2*r2^4*y3^2-y2^2*x3^2*r1^4*x2^2-3*y2^2*x3^2*x2^2*y3^4-y2^2*x3^2*x2^2*r3^4+2*y2^2*x3^3*r1^4*x2+2*y2^2*x3^3*r1^2*x2^3-4*y2^2*x3^4*r1^2*x2^2+2*y2^2*x3^4*r1^2*r2^2+2*y2^2*x3^5*r1^2*x2+2*y2^2*x3^4*x2^2*r2^2-2*y2^2*x3^3*x2^3*r3^2-2*y2^2*x3^5*r2^2*x2-3*y2^2*x3^4*x2^2*y3^2+2*y2^2*x3^4*x2^2*r3^2+2*x2^4*y3^3*y2*r1^2-2*x2^4*y3^3*y2*x3^2-2*x2^4*y3^3*y2*r3^2+2*x2^3*y3^4*r1^2*x3-2*x2^3*y3^4*y2^2*x3-2*x2^3*y3^4*r2^2*x3-2*x2^2*y3^3*y2^3*r3^2+2*x2^2*y3^4*y2^2*r2^2+2*x2^2*y3^5*r1^2*y2+2*x2^2*y3^3*r1^4*y2-4*x2^2*y3^4*r1^2*y2^2+2*x2^2*y3^4*r1^2*r2^2+2*x2^2*y3^3*y2^3*r1^2+2*x2^2*y3^4*y2^2*r3^2-2*x2^2*y3^5*y2*r2^2-x2^2*y3^2*y2^2*r1^4-x2^2*y3^2*y2^2*r3^4-x2^2*y3^2*r1^4*x3^2-x2^2*y3^2*r2^4*x3^2+2*x2^3*y3^2*r1^4*x3+2*x2^5*y3^2*r1^2*x3+2*x2^2*y3^2*r1^2*x3^2*r2^2-8*x2^3*y3^3*r1^2*y2*x3+2*y3^2*z2^2*r1^2*x2^2*r3^2+2*y3^2*z2^2*x2^2*z3^2*r3^2+4*y2^4*x3*x2*y3^2*r3^2+4*y2^3*x3*x2*y3^3*z2^2-4*y2^3*x3*x2*y3^3*r2^2-4*y2^2*x3*x2*y3^4*r1^2-4*y2^2*x3*x2*y3^2*r1^4+8*y2^3*x3*x2*y3^3*r1^2+4*y2*x3*x2^3*y3^3*z2^2-4*y2*x3*x2^3*y3^3*r2^2-4*y2^4*x3*x2*y3^2*r1^2+4*y2^3*x3^3*x2*y3*z3^2-4*y2^3*x3^3*x2*y3*r3^2+4*y2^3*x3*x2*y3^3*z3^2-4*y2^3*x3*x2*y3^3*r3^2+4*y2^2*x3*x2*y3^4*r2^2+2*y2*x3*x2*y3^3*r1^4+2*y2^3*x3*x2*y3*r1^4+2*y2^3*x3*x2*y3*z3^4+2*y2^3*x3*x2*y3*r3^4+2*y2*x3*x2*y3^3*z2^4+2*y2*x3*x2*y3^3*r2^4+2*y2*x3*x2^3*y3*r1^4+2*y2*x3^3*x2*y3*r1^4+2*y2*x3^3*x2*y3*z2^4+2*y2*x3^3*x2*y3*r2^4+2*y2*x3*x2^3*y3*z3^4+2*y2*x3*x2^3*y3*r3^4-4*y2*x3^2*x2^2*y3*r1^4-4*y2*x3^2*x2^4*y3*r1^2+8*y2*x3^3*x2^3*y3*r1^2-4*y2*x3^4*x2^2*y3*r1^2+4*y2*x3^3*x2^3*y3*z2^2-4*y2*x3^3*x2^3*y3*r2^2+4*y2*x3^2*x2^4*y3*r3^2+4*y2^3*x3^3*x2*y3*z2^2-4*y2^3*x3^3*x2*y3*r2^2+4*y2*x3^4*x2^2*y3*r2^2+4*y2*x3^3*x2^3*y3*z3^2-4*y2*x3^3*x2^3*y3*r3^2+4*y2*x3*x2^3*y3^3*z3^2-4*y2*x3*x2^3*y3^3*r3^2+16*y2^2*x3^2*x2^2*y3^2*r1^2);
b=(-z2^3*y3^2-x2^2*y3^2*z2-y2^2*z3*x3^2-y2^2*z3*y3^2+y2^3*z3*y3+y2*y3^3*z2-y2^2*y3^2*z2-z2*x3^2*x2^2-z2*x3^2*y2^2+z2*x3^3*x2+x2^3*z3*x3-x2^2*z3*x3^2-x2^2*z3*y3^2+y2*z3*z2^2*y3+y2*x3^2*z2*y3+y2*z3^2*z2*y3+z2*x3*x2*y3^2+z2*x3*x2*z3^2+x2*z3*y2^2*x3+x2*z3*z2^2*x3+x2^2*y3*y2*z3-y2^2*z3^3-z2^3*x3^2-x2^2*z3^3-r1^2*y3^2*z2-y2^2*z3*r1^2+r1^2*y3*y2*z3+y2*r1^2*z2*y3+z2*y3^2*r2^2-z2*x3^2*r1^2+z2*x3^2*r2^2-x2^2*z3*r1^2+x2^2*z3*r3^2+y2^2*z3*r3^2-y2*z3*r2^2*y3-y2*r3^2*z2*y3+z2*x3*r1^2*x2-z2*x3*x2*r3^2+x2*z3*r1^2*x3-x2*z3*r2^2*x3);
c=(-2*y2*z3*z2*y3-2*z2*x3*x2*z3+z3^2*y2^2+x3^2*z2^2+z3^2*x2^2+y2^2*x3^2+x2^2*y3^2+y3^2*z2^2-2*y2*x3*x2*y3);
if(a<0||c==0), result=[nan;nan;nan]; return; end % coz c is the denominator and a is under a root
%     error('Error in interx.m at z'); end
za=-1/2*(b-a^(1/2))/c;
zb=-1/2*(b+a^(1/2))/c;

z=za;
a1=(2*z*z2*x3-2*x2*z*z3+r1^2*x2-r1^2*x3-x2^2*x3-y2^2*x3-z2^2*x3+r2^2*x3+x2*x3^2+x2*y3^2+x2*z3^2-x2*r3^2);
b1=(-2*y2*x3+2*x2*y3);
if(b1==0), result=[nan;nan;nan]; return; end % coz b is the denominator in the expression
%     error('Error in interx.m at y'); end
y=a1/b1;
if(x2==0), result=[nan;nan;nan]; return; end
%     error('Error in interx.m at x'); end
x = 1/2*(r1^2+x2^2-2*y*y2+y2^2-2*z*z2+z2^2-r2^2)/x2;
%% convert result back to global
intersection1 = [x1 y1 z1]+[x y z];

z=zb;
a2=(2*z*z2*x3-2*x2*z*z3+r1^2*x2-r1^2*x3-x2^2*x3-y2^2*x3-z2^2*x3+r2^2*x3+x2*x3^2+x2*y3^2+x2*z3^2-x2*r3^2);
b2=(-2*y2*x3+2*x2*y3);
if(b2==0), result=[nan;nan;nan]; return; end % coz b is the denominator in the expression
%     error('Error in interx.m at y'); end
y=a2/b2;
if(x2==0), result=[nan;nan;nan]; return; end
%     error('Error in interx.m at x'); end
x = 1/2*(r1^2+x2^2-2*y*y2+y2^2-2*z*z2+z2^2-r2^2)/x2;
%% convert result back to global
intersection2 = [x1 y1 z1]+[x y z];
end